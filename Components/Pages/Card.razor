@page "/card"

@* 
    This is the Card component that represents a single card in the game. We need to
    track the state of the card to determine if it has been flipped or matched. We also
    need to track the type of card to check if two cards are a match. If the cards are a match,
    we can update the state of the cards to indicate that they are matched. If they are not a match,
    we can flip the cards back over. 
*@


<div  class="card" @onclick="ToggleIsFlipped">
      <p>@(IsFlipped ? MatchId : "?")</p>
</div>

@code {
    [Parameter]
    public bool IsFlipped { get; set; } = false;

    [Parameter]
    public bool IsMatched { get; set; } = false;

    [Parameter]
    public int Id { get; set; }

    [Parameter]
    public int MatchId { get; set; }

    [Parameter]
    public EventCallback<int> OnCardClicked { get; set; } // EventCallback for card click

    [Parameter]
    public EventCallback<Card> OnCardInitialized { get; set; }

    public async void ToggleIsFlipped()
    {
        IsFlipped = !IsFlipped;
        if (IsFlipped)
        {
            MemoryGame.FlipCard(Id);
            if (MemoryGame.Cards.First(c => c.Id == Id).IsMatched)
            {
                IsMatched = true;
            }
            await OnCardClicked.InvokeAsync(Id); // Notify parent component
        }
    }

    protected async override void OnInitialized()
    {
        base.OnInitialized();
        await OnCardInitialized.InvokeAsync(this);
        
    }
}